% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotPieNet}
\alias{plotPieNet}
\title{#' Title
#'
#'
#' @param Data
#' @param PrintGraph
#' @param GroupsLab
#' @param ScaleFunction
#' @param NodeSizeMult
#' @param Col
#' @param CirCol
#' @param ColLabels
#' @param LineCol
#' @param IdCol
#' @param Main
#' @param Cex.Main
#' @param Xlab
#' @param Ylab
#'
#' @return
#' @export
#'
#' @examples
# plotData2D <- function(Data, PrintGraph, GroupsLab = NULL,
#                        ScaleFunction = sqrt, NodeSizeMult=1, Labels = FALSE,
#                        PlotProjections = FALSE, Partition = NULL, 
#                        Main = '', Xlab = "PC1", Ylab = "PC2"){
# 
#   Data <- data.matrix(Data)
# 
#   if(is.null(GroupsLab)){
#     GroupsLab = rep("N/A", nrow(Data))
#   }
#   
#   p <- ggplot2::ggplot(data = data.frame(X = Data[,1], Y = Data[,2], Group = GroupsLab),
#                        mapping = ggplot2::aes(x= X, y= Y, col = Group), environment = environment()) +
#     ggplot2::geom_point()
#   
#   
#   if(is.null(Partition)){
#     print("Partition will be computed. Consider do that separetedly")
#     Partition <- PartitionData(X = Data, NodePositions = PrintGraph$NodePositions)$Partition
#   }
#   
#   if(PlotProjections == "onNodes"){
#     ProjDF <- data.frame(X = Data[,1], Y = Data[,2],
#                          Xend = PrintGraph$NodePositions[Partition,1], Yend = PrintGraph$NodePositions[Partition,2],
#                          Group = GroupsLab)
#     
#     p <- p + ggplot2::geom_segment(data = ProjDF,
#                                    mapping = ggplot2::aes(x=X, y=Y, xend = Xend, yend = Yend, col = Group), inherit.aes = FALSE)
#   }
#   
#   if(PlotProjections == "onEdges"){
#     OnEdgProj <- project_point_onto_graph(X = Data, NodePositions = PrintGraph$NodePositions, Edges = PrintGraph$Edges$Edges, Partition = Partition)
#     
#     ProjDF <- data.frame(X = Data[,1], Y = Data[,2],
#                          Xend = OnEdgProj$X_projected[,1], Yend = OnEdgProj$X_projected[,2],
#                          Group = GroupsLab)
#     
#     p <- p + ggplot2::geom_segment(data = ProjDF,
#                                    mapping = ggplot2::aes(x=X, y=Y, xend = Xend, yend = Yend, col = Group), inherit.aes = FALSE)
#   }
#   
#   
#   Sizes <- table(factor(Partition, levels = 1:nrow(PrintGraph$NodePositions)))
#   Sizes <- NodeSizeMult*do.call(what = ScaleFunction, list(as.vector(Sizes)))
#   
#   Nodes.DF <- data.frame(X = PrintGraph$NodePositions[,1],
#                          Y = PrintGraph$NodePositions[,2],
#                          Size = Sizes, ID = 1:nrow(PrintGraph$NodePositions))
#   
#   Edges.DF <- data.frame(X = PrintGraph$NodePositions[PrintGraph$Edges$Edges[,1],1],
#                          Y = PrintGraph$NodePositions[PrintGraph$Edges$Edges[,1],2],
#                          Xend = PrintGraph$NodePositions[PrintGraph$Edges$Edges[,2],1],
#                          Yend = PrintGraph$NodePositions[PrintGraph$Edges$Edges[,2],2])
#   
#   
#   p <- p + ggplot2::geom_point(data = Nodes.DF,
#                                mapping = ggplot2::aes(x=X, y=Y, size = Size, col = "Graph"), inherit.aes = FALSE)
#   
#   p <- p + ggplot2::geom_segment(data = Edges.DF,
#                                  mapping = ggplot2::aes(x=X, y=Y, xend = Xend, yend = Yend, col = "Graph"), inherit.aes = FALSE)
#   
#   if(Labels){
#     p <- p + ggplot2::geom_label(data = Nodes.DF, mapping = ggplot2::aes(x=X, y=Y, label = ID, col = "Graph"),
#                                  inherit.aes = FALSE, vjust = 1, hjust = 1)
#   }
#   
#   p <- p + ggplot2::labs(title = Main, x=Xlab, y=Ylab)
# 
#   print(p)
# 
# }}
\usage{
plotPieNet(X, TargetPG, GroupsLab = NULL, Partition = NULL,
  TrimmingRadius = Inf, Graph = NULL, LayOut = "nicely", Main = "",
  ScaleFunction = sqrt, NodeSizeMult = 1, ColCat = NULL, PlotNet = TRUE,
  DirectionMat = NULL, Thr = 0.05, Arrow.size = 0.5, Leg.cex = 1)
}
\arguments{
\item{TargetPG}{}

\item{GroupsLab}{}

\item{Partition}{}

\item{TrimmingRadius}{}

\item{PlotNet}{}

\item{Leg.cex}{}
}
\description{
Plot a graph with pie chart associated with each node
}
