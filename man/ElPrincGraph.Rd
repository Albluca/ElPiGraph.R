% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/topologies.R
\name{ElPrincGraph}
\alias{ElPrincGraph}
\title{Core function to construct a principal elestic graph}
\usage{
ElPrincGraph(X, NumNodes = 100, NumEdges = Inf, Lambda, Mu, ElasticMatrix,
  NodesPositions, verbose = FALSE, n.cores = 1, ClusType = "Sock",
  CompileReport = FALSE, ShowTimer = FALSE, ComputeMSEP = TRUE,
  Mode = 1, MaxNumberOfIterations = 10, eps = 0.01,
  TrimmingRadius = Inf, GrowGrammars = list(), ShrinkGrammars = list(),
  FastSolve = FALSE)
}
\arguments{
\item{X}{numerical 2D matrix, the n-by-m matrix with the position of n m-dimensional points}

\item{NumNodes}{integer, the number of nodes of the principal graph}

\item{NumEdges}{integer, the maximum nulber of edges}

\item{Lambda}{real, the lambda parameter used the compute the elastic energy}

\item{Mu}{real, the lambda parameter used the compute the elastic energy}

\item{ElasticMatrix}{numerical 2D matrix, the k-by-k elastic matrix}

\item{NodesPositions}{numerical 2D matrix, the k-by-m matrix with k m-dimensional positions of the nodes
in the initial step}

\item{verbose}{boolean, should debugging information be reported?}

\item{n.cores}{either an integer (indicating the number of cores to used for the creation of a cluster) or 
cluster structure returned, e.g., by makeCluster. If a cluster structure is used, all the nodes must contains X
(this is done using clusterExport)}

\item{ClusType}{string, the type of cluster to use. It can gbe either "Sock" or "Fork".
Currently fork clustering only works in Linux}

\item{CompileReport}{boolean, should a step-by-step report with various information on the
contruction of the principal graph be compiled?}

\item{ShowTimer}{boolean, should the time to construct the graph be computed and reported for each step?}

\item{ComputeMSEP}{boolean, should MSEP be computed when building the report?}

\item{Mode}{integer, the energy computation mode}

\item{MaxNumberOfIterations}{integer, maximum number of steps to embed the nodes in the data}

\item{eps}{real, minimal relative change in the position of the nodes to stop embedment}

\item{TrimmingRadius}{real, maximal distance of point from a node to affect its embedment}

\item{GrowGrammars}{list of strings, the grammar to be used in the growth step}

\item{ShrinkGrammars}{list of strings, the grammar to be used in the shrink step}

\item{FastSolve}{boolean, should FastSolve be used when fitting the points to the data?}
}
\value{
a named list with a number of elements:
\describe{
  \item{NodePositions}{A numeric matrix containing the positions of the nodes}
  \item{ElasticMatrix}{The elastic matrix of the graph}
  \item{ReportTable}{The report table for the graph construction}
  \item{FinalReport}{The report table associated with the final graph configuration}
  \item{Lambda}{The lambda parameter used during the graph construction}
  \item{Mu}{The mu parameter used during the graph construction}
  \item{FastSolve}{was FastSolve being used?}
}
}
\description{
The core function that takes the n m-dimensional points and construct a principal elastic graph using the
grammars provided.
}
\examples{

This is a low level function. See  \\code{\\link{computeElasticPrincipalCircle}},
\\code{\\link{computeElasticPrincipalCurve}}, or \\code{\\link{computeElasticPrincipalTree}}
for examples

}
