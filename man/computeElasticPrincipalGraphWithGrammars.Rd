% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BaseElPiWrapper.R
\name{computeElasticPrincipalGraphWithGrammars}
\alias{computeElasticPrincipalGraphWithGrammars}
\title{Conscruct a principal graph with the specified grammar}
\usage{
computeElasticPrincipalGraphWithGrammars(X, NumNodes, NumEdges = Inf,
  InitNodes = 2, Lambda = 0.01, Mu = 0.1, GrowGrammars, ShrinkGrammars,
  GrammarOptimization = FALSE, MaxSteps = Inf, GrammarOrder = c("Grow",
  "Shrink"), MaxNumberOfIterations = 10, TrimmingRadius = Inf, eps = 0.01,
  Do_PCA = TRUE, InitNodePositions = NULL, AdjustVect = NULL,
  ElasticMatrix = NULL, InitEdges = NULL, CenterData = TRUE,
  ComputeMSEP = TRUE, verbose = FALSE, ShowTimer = FALSE,
  ReduceDimension = NULL, drawAccuracyComplexity = TRUE,
  drawPCAView = TRUE, drawEnergy = TRUE, n.cores = 1, ClusType = "Sock",
  MinParOP = MinParOP, nReps = 1, ParallelRep = FALSE, Subsets = list(),
  ProbPoint = 1, Mode = 1, FinalEnergy = "Base", alpha = 0, beta = 0,
  gamma = 0, FastSolve = FALSE, Configuration = NULL,
  DensityRadius = NULL, AvoidSolitary = FALSE, EmbPointProb = 1,
  SampleIC = TRUE, AvoidResampling = TRUE, AdjustElasticMatrix = NULL,
  AdjustElasticMatrix.Initial = NULL, Lambda.Initial = NULL,
  Mu.Initial = NULL, ...)
}
\arguments{
\item{X}{numerical 2D matrix, the n-by-m matrix with the position of n m-dimensional points}

\item{NumNodes}{integer, the number of nodes of the principal graph}

\item{NumEdges}{integer, the maximum nulber of edges}

\item{InitNodes}{integer, number of points to include in the initial graph}

\item{Lambda}{real, the lambda parameter used the compute the elastic energy}

\item{Mu}{real, the lambda parameter used the compute the elastic energy}

\item{GrowGrammars}{list of strings, the grammar to be used in the growth step}

\item{ShrinkGrammars}{list of strings, the grammar to be used in the shrink step}

\item{GrammarOptimization}{boolean, should grammar optimization be perfomred? If true grammar operations that do not increase the number of
nodes will be allowed}

\item{MaxSteps}{integer, max number of applications of the grammar. This value need to be less than infinity if GrammarOptimization is set to true}

\item{GrammarOrder}{vector of strings, the order of application of the grammars. Can be any combination of "Grow" and "Shrink"}

\item{MaxNumberOfIterations}{integer, maximum number of steps to embed the nodes in the data}

\item{TrimmingRadius}{real, maximal distance of point from a node to affect its embedment}

\item{eps}{real, minimal relative change in the position of the nodes to stop embedment}

\item{Do_PCA}{boolean, should data and initial node positions be PCA trnasformed?}

\item{InitNodePositions}{numerical 2D matrix, the k-by-m matrix with k m-dimensional positions of the nodes
in the initial step}

\item{AdjustVect}{boolean vector keeping track of the nodes for which the elasticity parameters have been adjusted.
When true for a node its elasticity parameters will not be adjusted.}

\item{ElasticMatrix}{numerical 2D matrix, the e-by-e matrix containing the elasticity parameters of the edges}

\item{InitEdges}{numerical 2D matrix, the e-by-2 matrix with e end-points of the edges connecting the nodes}

\item{CenterData}{boolean, should data and initial node positions be centered?}

\item{ComputeMSEP}{boolean, should MSEP be computed when building the report?}

\item{verbose}{boolean, should debugging information be reported?}

\item{ShowTimer}{boolean, should the time to construct the graph be computed and reported for each step?}

\item{ReduceDimension}{integer vector, vector of principal components to retain when performing
dimensionality reduction. If NULL all the components will be used}

\item{drawAccuracyComplexity}{boolean, should the accuracy VS complexity plot be reported?}

\item{drawPCAView}{boolean, should a 2D plot of the points and pricipal curve be dranw for the final configuration?}

\item{drawEnergy}{boolean, should changes of evergy VS the number of nodes be reported?}

\item{n.cores}{either an integer (indicating the number of cores to used for the creation of a cluster) or
cluster structure returned, e.g., by makeCluster. If a cluster structure is used, all the nodes must contains X
(this is done using clusterExport)}

\item{ClusType}{string, the type of cluster to use. It can gbe either "Sock" or "Fork".
Currently fork clustering only works in Linux}

\item{MinParOP}{integer, the minimum number of operations to use parallel computation}

\item{nReps}{integer, number of replica of the construction}

\item{ParallelRep}{boolean, should parallel execution be performed on the sampling instead of the the grammar evaluations?}

\item{Subsets}{list of column names (or column number). When specified a principal tree will be computed for each of the subsets specified.}

\item{ProbPoint}{real between 0 and 1, probability of inclusing of a single point for each computation}

\item{Mode}{integer, the energy computation mode}

\item{FinalEnergy}{string indicating the final elastic emergy associated with the configuration. Currently it can be "Base" or "Penalized"}

\item{alpha}{positive numeric, the value of the alpha parameter of the penalized elastic energy}

\item{beta}{positive numeric, the value of the beta parameter of the penalized elastic energy}

\item{FastSolve}{boolean, should FastSolve be used when fitting the points to the data?}

\item{Configuration}{string, initial configuration type.}

\item{DensityRadius}{numeric, the radius used to estimate local density. This need to be set when ICOver is equal to "Density"}

\item{AvoidSolitary}{boolean, should configurations with "solitary nodes", i.e., nodes without associated points be discarded?}

\item{EmbPointProb}{numeric between 0 and 1. If less than 1 point will be sampled at each iteration.
EmbPointProb indicates the probability of using each points. This is an *experimental* feature, which may
helps speeding up the computation if a large number of points is present.}

\item{SampleIC}{boolean, should the initial configuration be considered on the sampled points when applicable?}

\item{AvoidResampling}{booleand, should the sampling of initial conditions avoid reselecting the same points
(or points neighbors if DensityRadius is specified)?}

\item{AdjustElasticMatrix}{a penalization function to adjust the elastic matrices after a configuration has been chosen (e.g., AdjustByConstant).
If NULL (the default), no penalization will be used.}

\item{AdjustElasticMatrix.Initial}{a penalization function to adjust the elastic matrices of the initial configuration (e.g., AdjustByConstant).
If NULL (the default), no penalization will be used.}

\item{Lambda.Initial}{real, the lambda parameter used the construct the elastic matrix associated with ther initial configuration if needed.
If NULL, the value of Lambda will be used.}

\item{Mu.Initial}{real, the mu parameter used the construct the elastic matrix associated with ther initial configuration if needed.
If NULL, the value of Mu will be used.}

\item{...}{optional parameter that will be passed to the AdjustElasticMatrix function}
}
\value{
A list of principal graph strucutures containing the trees constructed during the different replica of the algorithm.
If the number of replicas is larger than 1. The the final element of the list is the "average tree", which is constructed by
fitting the coordinates of the nodes of the reconstructed trees
}
\description{
This function is a wrapper to the computeElasticPrincipalGraph function that construct the appropriate initial graph and
apply the required grammar operations. Note that this is a generic function that is is called by the topology specific functions.
}
\examples{


}
